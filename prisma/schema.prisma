generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int       @id @default(autoincrement())
  email    String    @unique
  name     String?
  password String
  isAdmin  Boolean   @default(false)
  orders   Order[]
  sessions Session[]
}

model Product {
  id           Int              @id @default(autoincrement())
  name         String
  description  String
  price        Float
  collectionId Int?
  categoryId   Int?
  orderItems   OrderItem[]
  category     Category?        @relation(fields: [categoryId], references: [id])
  collection   Collection?      @relation(fields: [collectionId], references: [id])
  variants     ProductVariant[]
  createdAt    DateTime         @default(now())
  soldCount    Int              @default(0)
}

model ProductVariant {
  id               Int               @id @default(autoincrement())
  productId        Int
  color            String
  size             String
  stock            Int
  frontImage       String
  backImage        String
  additionalImages AdditionalImage[]
  product          Product           @relation(fields: [productId], references: [id])
}

model AdditionalImage {
  id        Int            @id @default(autoincrement())
  variantId Int
  imageUrl  String
  variant   ProductVariant @relation(fields: [variantId], references: [id])
}

model Order {
  id        Int         @id @default(autoincrement())
  userId    Int
  createdAt DateTime    @default(now())
  total     Float
  user      User        @relation(fields: [userId], references: [id])
  items     OrderItem[]
}

model OrderItem {
  id        Int     @id @default(autoincrement())
  orderId   Int
  productId Int
  quantity  Int
  price     Float
  order     Order   @relation(fields: [orderId], references: [id])
  product   Product @relation(fields: [productId], references: [id])
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[]
}

model Collection {
  id       Int       @id @default(autoincrement())
  name     String
  image    String
  products Product[]
}

model Session {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique
  userId       Int
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}